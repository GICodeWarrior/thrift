/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef tutorial_TYPES_H
#define tutorial_TYPES_H

/* base includes */
#include <glib-object.h>
#include "thrift_protocol.h"
#include "thrift_struct.h"

/* other thrift includes */
#include "shared_types.h"

/* custom thrift includes */

/* begin types */

typedef enum _ThriftTutorialOperation ThriftTutorialOperation;
enum _ThriftTutorialOperation {
  ADD = 1,
  SUBTRACT = 2,
  MULTIPLY = 3,
  DIVIDE = 4
};

typedef gint32 ThriftTutorialMyInteger;

/* constants */
#define THRIFT_TUTORIAL_INT32CONSTANT 9853
#define THRIFT_TUTORIAL_MAPCONSTANT "not yet supported"

/* struct */
typedef struct _ThriftTutorialWork ThriftTutorialWork;
struct _ThriftTutorialWork
{ 
    ThriftStruct parent; 

    /* private */
    gint32 num1;
    gint32 num2;
    gchar * str1;
    gchar * str2;
    ThriftTutorialOperation op;
}; 
typedef struct _ThriftTutorialWorkClass ThriftTutorialWorkClass;
struct _ThriftTutorialWorkClass
{ 
    ThriftStructClass parent; 
}; 
GType thrift_tutorial_work_get_type (void);
#define THRIFT_TUTORIAL_TYPE_WORK (thrift_tutorial_work_get_type ())
#define THRIFT_TUTORIAL_WORK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), THRIFT_TUTORIAL_TYPE_WORK, ThriftTutorialWork))
#define THRIFT_TUTORIAL_WORK_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), THRIFT_TUTORIAL_TYPE_WORK, ThriftTutorialWorkClass))
#define THRIFT_TUTORIAL_IS_WORK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), THRIFT_TUTORIAL_TYPE_WORK))
#define THRIFT_TUTORIAL_IS_WORK_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), THRIFT_TUTORIAL_TYPE_WORK))
#define THRIFT_TUTORIAL_WORK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), THRIFT_TUTORIAL_TYPE_WORK, ThriftTutorialWorkClass))

/* exception */
typedef struct _ThriftTutorialInvalidOperation ThriftTutorialInvalidOperation;
struct _ThriftTutorialInvalidOperation
{ 
    ThriftStruct parent; 

    /* private */
    gint32 what;
    gchar * why;
}; 
typedef struct _ThriftTutorialInvalidOperationClass ThriftTutorialInvalidOperationClass;
struct _ThriftTutorialInvalidOperationClass
{ 
    ThriftStructClass parent; 
}; 
GType thrift_tutorial_invalid_operation_get_type (void);
#define THRIFT_TUTORIAL_TYPE_INVALID_OPERATION (thrift_tutorial_invalid_operation_get_type ())
#define THRIFT_TUTORIAL_INVALID_OPERATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), THRIFT_TUTORIAL_TYPE_INVALID_OPERATION, ThriftTutorialInvalidOperation))
#define THRIFT_TUTORIAL_INVALID_OPERATION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), THRIFT_TUTORIAL_TYPE_INVALID_OPERATION, ThriftTutorialInvalidOperationClass))
#define THRIFT_TUTORIAL_IS_INVALID_OPERATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), THRIFT_TUTORIAL_TYPE_INVALID_OPERATION))
#define THRIFT_TUTORIAL_IS_INVALID_OPERATION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), THRIFT_TUTORIAL_TYPE_INVALID_OPERATION))
#define THRIFT_TUTORIAL_INVALID_OPERATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), THRIFT_TUTORIAL_TYPE_INVALID_OPERATION, ThriftTutorialInvalidOperationClass))

#endif /* tutorial_TYPES_H */
